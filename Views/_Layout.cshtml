@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
	Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name ="viewport" content="width=device-width", initial-scale="1.0">
    <meta name="description" content="@Model.Value("pageDescription")">
    <meta name="keywords" content="@Model.Value("pageKeywords")">
    <script src="https://kit.fontawesome.com/41c8b474e2.js" crossorigin="anonymous"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=DM+Sans:opsz,wght@9..40,300;9..40,400;9..40,500;9..40,600;9..40,700&family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
    <link href="/css/styles.css" rel="stylesheet">
    <title>@Model.Value("pageTitle") | Crito</title>
</head>
<body>
    
    <header>

        @await Html.PartialAsync("_NavSection")
        @await Html.PartialAsync("_ShowcaseSection")
        <img class="header-lines" src="~/images/background/background-lines.svg" alt="">
        
    </header>
    

    <main>
        @RenderBody()
    </main>
        
        
    <footer>
        @await Html.PartialAsync("_Footer")
    </footer>

    
    
   <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script>
   <script src="script.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            var paginationDots = document.getElementById("pagination-dots");
    
            paginationDots.addEventListener("click", function(event) {
                // Check if the clicked element is a dot anchor
                if (event.target.tagName === "A" && event.target.classList.contains("dot")) {
                    // Prevent the default behavior (scrolling to the top)
                    event.preventDefault();
    
                    // Get the page number from the clicked dot's href attribute
                    var pageLink = event.target.getAttribute("href");
                    var pageNumber = parseInt(pageLink.split("=")[1]); // Extract the page number
    
                    // Handle the pagination logic here
                    // You can use JavaScript to load the new content without a page refresh
                    // For example, you can make an AJAX request to load the new page of news items
                    // and update the content dynamically based on the pageNumber.
                    // Replace the following line with your pagination logic.
                    console.log("Clicked on page " + pageNumber);
                }
            });
        });
    </script>

</body>
</html>